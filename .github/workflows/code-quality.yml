name: Code Quality

on:
  push:
    branches: [ main, experimental ]
  pull_request:
    branches: [ main, experimental ]

jobs:
  lint-and-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Run ESLint
        run: npm run lint
        
      - name: Run tests with coverage
        run: npm run test:coverage
        
      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage/
          
      - name: Check test coverage
        run: |
          # This step checks the test coverage percentage and issues a warning if it's below 60%
          
          # First, try to find coverage/coverage-summary.json (Jest format)
          if [ -f coverage/coverage-summary.json ]; then
            # Extract the line coverage percentage using jq
            COVERAGE=$(cat coverage/coverage-summary.json | jq '.total.lines.pct')
            echo "Total coverage: $COVERAGE%"
            # Compare coverage to threshold (60%)
            if (( $(echo "$COVERAGE < 60" | bc -l) )); then
              echo "::warning::Test coverage is below 60%"
            fi
          
          # If not found, try to find coverage/lcov.info (alternative format)
          elif [ -f coverage/lcov.info ]; then
            # Install lcov to parse the lcov.info file
            sudo apt-get install -y lcov
            # Extract the line coverage percentage using lcov and text processing
            COVERAGE=$(lcov --summary coverage/lcov.info | grep "lines" | awk '{print $4}' | cut -d'%' -f1)
            echo "Total coverage: $COVERAGE%"
            # Compare coverage to threshold (60%)
            if (( $(echo "$COVERAGE < 60" | bc -l) )); then
              echo "::warning::Test coverage is below 60%"
            fi
          
          # If neither file is found, issue a warning
          else
            echo "::warning::Could not find coverage report file"
          fi 

